{"ast":null,"code":"var _jsxFileName = \"/home/arjun/filesharing/app/src/component/home-form.js\";\nimport React, { Component } from \"react\";\nimport _ from 'lodash';\nimport classNames from 'classnames';\nimport { upload } from \"../helpers/upload\";\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass HomeForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      form: {\n        files: [],\n        to: 'friend@gmail.com',\n        from: 'me@gmail.com',\n        message: 'Mic testing 1 2 3'\n      },\n      errors: {\n        to: null,\n        from: null,\n        message: null,\n        files: null\n      }\n    };\n    this._onTextChange = this._onTextChange.bind(this);\n    this._onSubmit = this._onSubmit.bind(this);\n    this._formValidation = this._formValidation.bind(this);\n    this._onFileAdded = this._onFileAdded.bind(this);\n    this._onFileRemove = this._onFileRemove.bind(this);\n  }\n  _onFileRemove(key) {\n    let {\n      files\n    } = this.state.form;\n    files.splice(key, 1);\n    this.setState({\n      form: {\n        ...this.state.form,\n        files: files\n      }\n    });\n  }\n  _onFileAdded(event) {\n    let files = _.get(this.state, 'form.files', []);\n    _.each(_.get(event, 'target.files'), file => {\n      files.push(file);\n    });\n    this.setState({\n      form: {\n        ...this.state.form,\n        files: files\n      }\n    }, () => {\n      this._formValidation(['files'], isValid => {});\n    });\n  }\n  _isEmail(emailAddress) {\n    // eslint-disable-next-line\n    const emailRegex = /^(([^<>()[\\]\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i;\n    return emailRegex.test(emailAddress);\n  }\n  _formValidation() {\n    let fields = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    let callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : () => {};\n    let {\n      form,\n      errors\n    } = this.state;\n    const validations = {\n      from: [{\n        errorMessage: 'From is requried.',\n        isValid: () => {\n          return form.from.length;\n        }\n      }, {\n        errorMessage: 'Email is not valid.',\n        isValid: () => {\n          return this._isEmail(form.from);\n        }\n      }],\n      to: [{\n        errorMessage: 'To is requried.',\n        isValid: () => {\n          return form.to.length;\n        }\n      }, {\n        errorMessage: 'Email is not valid.',\n        isValid: () => {\n          return this._isEmail(form.to);\n        }\n      }],\n      files: [{\n        errorMessage: 'File is required',\n        isValid: () => {\n          return form.files.length;\n        }\n      }]\n    };\n    _.each(fields, field => {\n      let fieldValidations = _.get(validations, field, []);\n      errors[field] = null;\n      _.each(fieldValidations, fieldValidation => {\n        const isValid = fieldValidation.isValid();\n        if (!isValid) {\n          errors[field] = fieldValidation.errorMessage;\n        }\n      });\n    });\n    this.setState({\n      errors: errors\n    }, () => {\n      let isValid = true;\n      _.each(errors, err => {\n        if (err !== null) {\n          isValid = false;\n        }\n      });\n      return callback(isValid);\n    });\n  }\n  _onSubmit(event) {\n    event.preventDefault();\n    this._formValidation(['from', 'to', 'files'], isValid => {\n      if (isValid) {\n        const data = this.state.form;\n        if (this.props.onUploadBegin) {\n          this.props.onUploadBegin(data);\n        }\n        upload(data, event => {\n          if (this.props.onUploadEvent) {\n            this.props.onUploadEvent(event);\n          }\n        });\n      }\n    });\n  }\n  _onTextChange(event) {\n    let {\n      form\n    } = this.state;\n    const fieldName = event.target.name;\n    const fieldValue = event.target.value;\n    form[fieldName] = fieldValue;\n    this.setState({\n      form: form\n    });\n  }\n  render() {\n    const {\n      form,\n      errors\n    } = this.state;\n    const {\n      files\n    } = form;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-card\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this._onSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"app-card-header\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"app-card-header-inner\",\n            children: [files.length ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"app-files-selected\",\n              children: files.map((file, index) => {\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"app-files-selected-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"filename\",\n                    children: file.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 184,\n                    columnNumber: 57\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"file-action\",\n                    children: /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => this._onFileRemove(index),\n                      type: 'button',\n                      className: \"app-file-remove\",\n                      children: \"X\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 186,\n                      columnNumber: 61\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 185,\n                    columnNumber: 57\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 183,\n                  columnNumber: 53\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 49\n            }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classNames(\"app-file-select-zone\", {\n                'error': _.get(errors, 'files')\n              }),\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                id: \"input-file\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  onChange: this._onFileAdded,\n                  id: \"input-file\",\n                  type: \"file\",\n                  multiple: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 196,\n                  columnNumber: 37\n                }, this), files.length ? /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"app-upload-description text-uppercase\",\n                  children: \"Add more files\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 198,\n                  columnNumber: 56\n                }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"app-upload-icon\",\n                    children: /*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"icon-picture-streamline\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 200,\n                      columnNumber: 79\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 200,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"app-upload-description\",\n                    children: \"Drag and drop your files here.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 201,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 199,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"app-card-content\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"app-card-content-inner\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: classNames(\"app-form-item\", {\n                'error': _.get(errors, 'to')\n              }),\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"to\",\n                children: \"Send to\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                onChange: this._onTextChange,\n                value: form.to,\n                name: \"to\",\n                placeholder: _.get(errors, 'to') ? _.get(errors, 'to') : 'Email address',\n                type: \"text\",\n                id: \"to\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classNames(\"app-form-item\", {\n                'error': _.get(errors, 'from')\n              }),\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"to\",\n                children: \"From\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                onChange: this._onTextChange,\n                value: form.from,\n                name: \"from\",\n                placeholder: _.get(errors, 'from') ? _.get(errors, 'from') : 'Your email address',\n                type: \"text\",\n                id: \"from\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"app-form-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"message\",\n                children: \"From\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                onChange: this._onTextChange,\n                value: _.get(form, 'message', ''),\n                placeholder: \"Add a note (Optional)\",\n                id: \"message\",\n                name: \"message\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"app-form-action\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"app-button primary\",\n                children: \"Send\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 13\n    }, this);\n  }\n}\nHomeForm.propTypes = {\n  onUploadBegin: PropTypes.func,\n  onUploadEvent: PropTypes.func\n};\nexport default HomeForm;","map":{"version":3,"names":["React","Component","_","classNames","upload","PropTypes","jsxDEV","_jsxDEV","HomeForm","constructor","props","state","form","files","to","from","message","errors","_onTextChange","bind","_onSubmit","_formValidation","_onFileAdded","_onFileRemove","key","splice","setState","event","get","each","file","push","isValid","_isEmail","emailAddress","emailRegex","test","fields","arguments","length","undefined","callback","validations","errorMessage","field","fieldValidations","fieldValidation","err","preventDefault","data","onUploadBegin","onUploadEvent","fieldName","target","name","fieldValue","value","render","className","children","onSubmit","map","index","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","id","onChange","multiple","htmlFor","placeholder","propTypes","func"],"sources":["/home/arjun/filesharing/app/src/component/home-form.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport _ from 'lodash';\nimport classNames from 'classnames';\nimport { upload } from \"../helpers/upload\";\nimport PropTypes from 'prop-types';\n\n\nclass HomeForm extends Component{\n\n    constructor(props){\n        super(props);\n\n        this.state = {\n            form: {\n                files: [],\n                to: 'friend@gmail.com',\n                from: 'me@gmail.com',\n                message: 'Mic testing 1 2 3'\n            },\n            errors: {\n                to: null,\n                from: null,\n                message: null,\n                files: null\n            }\n        }\n\n        this._onTextChange = this._onTextChange.bind(this);\n        this._onSubmit = this._onSubmit.bind(this);\n        this._formValidation = this._formValidation.bind(this);\n        this._onFileAdded = this._onFileAdded.bind(this);\n        this._onFileRemove = this._onFileRemove.bind(this);\n    }\n\n    _onFileRemove(key){\n        let {files} = this.state.form;\n        files.splice(key, 1);\n\n        this.setState({\n            form: {\n                ...this.state.form,\n                files: files\n            }\n        })\n    }\n    _onFileAdded(event){\n        let files = _.get(this.state, 'form.files', []);\n\n        _.each(_.get(event, 'target.files'), (file) => {\n            files.push(file);\n        });\n        \n        this.setState({\n            form:{\n                ...this.state.form,\n                files: files,\n            }\n            }, ()=>{\n                this._formValidation(['files'],(isValid)=>{\n\n                });\n        });\n\n    }\n    _isEmail(emailAddress){\n        // eslint-disable-next-line\n        const emailRegex = /^(([^<>()[\\]\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i;\n        return emailRegex.test(emailAddress);\n    }\n\n    _formValidation(fields = [], callback = () => {}){\n        let {form, errors} = this.state;\n        \n        const validations = {\n            from: [\n                {\n                    errorMessage: 'From is requried.',\n                    isValid: () => {\n                        return form.from.length;\n                    }\n                },\n                {\n                    errorMessage: 'Email is not valid.',\n                    isValid: () => {\n                        return this._isEmail(form.from);\n                    }\n                }\n            ],\n            to: [\n                {\n                    errorMessage: 'To is requried.',\n                    isValid: () => {\n                        return form.to.length;\n                    }\n                },\n                {\n                    errorMessage: 'Email is not valid.',\n                    isValid: () => {\n                        return this._isEmail(form.to);\n                    }\n                }\n            ],\n            files: [\n                {\n                    errorMessage: 'File is required',\n                    isValid: () => {\n                        return form.files.length;\n                    }\n                }\n            ]\n        }\n        _.each(fields, (field) => {\n            let fieldValidations = _.get(validations, field, []); \n            \n            errors[field] = null;\n\n            _.each(fieldValidations, (fieldValidation) => {\n                const isValid = fieldValidation.isValid();\n                if(!isValid){\n                    errors[field] = fieldValidation.errorMessage;\n                }\n            });\n        });\n\n        this.setState({\n            errors: errors\n        }, () => {\n            let isValid = true;\n            _.each(errors, (err) => {\n                if(err !== null){\n                    isValid = false;\n                }\n            })\n            return callback(isValid);\n        });\n    }\n\n    _onSubmit(event){\n        event.preventDefault();\n        this._formValidation(['from','to','files'], (isValid) => {\n            \n            if(isValid){\n\n                const data = this.state.form;\n\n                if(this.props.onUploadBegin){\n                    this.props.onUploadBegin(data);\n                }\n\n                upload(data, (event) => {\n                    if(this.props.onUploadEvent){\n                        this.props.onUploadEvent(event);\n                    }\n                })\n            }\n        });\n    }\n\n    _onTextChange(event){\n\n        let {form} =  this.state;\n\n        const fieldName = event.target.name;\n        const fieldValue = event.target.value;\n\n        form[fieldName] = fieldValue;\n        this.setState({form: form})\n    }\n\n    render(){\n        const {form, errors} = this.state;\n        const {files} = form;\n        return(\n            <div className='app-card'>\n                <form onSubmit={this._onSubmit}>\n                    <div className='app-card-header'>\n                        <div className='app-card-header-inner'>    \n                            {\n                                files.length ? (<div className=\"app-files-selected\">\n                                        {\n                                            files.map((file,index) => {\n                                                return(\n                                                    <div key={index} className=\"app-files-selected-item\">\n                                                        <div className=\"filename\">{file.name}</div>\n                                                        <div className=\"file-action\">\n                                                            <button onClick={()=>this._onFileRemove(index)} type={'button'} className=\"app-file-remove\">X</button>\n                                                        </div>\n                                                    </div>\n                                                )\n                                            })\n                                        }\n                                        </div>) : null          \n                            }\n                            <div className={classNames(\"app-file-select-zone\",{'error': _.get(errors,'files')})}>\n                                <label id='input-file'>\n                                    <input onChange={this._onFileAdded} id='input-file' type='file' multiple={true} />\n                                    {\n                                        files.length ? <span className=\"app-upload-description text-uppercase\">Add more files</span> : \n                                        <span>\n                                            <span className=\"app-upload-icon\"><i className=\"icon-picture-streamline\" /></span>\n                                            <span className=\"app-upload-description\">Drag and drop your files here.</span>\n                                        </span>\n                                    }\n                                </label>\n                            </div>\n                        </div>\n                    </div>\n                    <div className='app-card-content'>\n                        <div className='app-card-content-inner'>\n\n                            <div className={classNames(\"app-form-item\", {'error': _.get(errors,'to')})}>\n                                <label htmlFor=\"to\">Send to</label>\n                                <input onChange={this._onTextChange} value={form.to} name=\"to\" placeholder={_.get(errors, 'to') ? _.get(errors, 'to') : 'Email address'} type='text' id='to' />\n                            </div>\n\n                            <div className={classNames(\"app-form-item\", {'error': _.get(errors,'from')})}>\n                                <label htmlFor=\"to\">From</label>\n                                <input onChange={this._onTextChange} value={form.from} name=\"from\" placeholder={_.get(errors, 'from') ? _.get(errors, 'from') : 'Your email address'} type='text' id='from' />\n                            </div>\n                            \n                            <div className=\"app-form-item\">\n                                <label htmlFor=\"message\">From</label>\n                                <textarea onChange={this._onTextChange} value={_.get(form, 'message', '')} placeholder='Add a note (Optional)' id=\"message\" name=\"message\" />\n                            </div>\n\n                            <div className=\"app-form-action\">\n                                <button type='submit' className=\"app-button primary\">Send</button>\n                            </div>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nHomeForm.propTypes = {\n    onUploadBegin: PropTypes.func,\n    onUploadEvent: PropTypes.func\n};\n\nexport default HomeForm;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}