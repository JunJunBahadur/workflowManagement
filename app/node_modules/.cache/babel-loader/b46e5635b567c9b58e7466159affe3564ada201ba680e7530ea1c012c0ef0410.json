{"ast":null,"code":"var _jsxFileName = \"/home/arjun/filesharing/app/src/component/home-uploading.js\";\nimport React from \"react\";\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\nimport { betterNumber } from \"../helpers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass HomeUploading extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      startTime: new Date(),\n      lastLoaded: 0,\n      speedUpload: 0,\n      data: null,\n      loaded: 0,\n      total: 0,\n      percentage: 10\n    };\n  }\n  componentDidMount() {\n    const {\n      data\n    } = this.props;\n    this.setState({\n      data: data\n    });\n  }\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const {\n      event\n    } = nextProps;\n    console.log(\"Getting the event of uploading\", event);\n    switch (_.get(event, 'type')) {\n      case 'onUploadProgress':\n        const loaded = _.get(event, 'payload.loaded', 0);\n        const total = _.get(event, 'payload.total', 0);\n        const percentage = total !== 0 ? loaded / total * 100 : 0;\n        const currentTime = new Date();\n        let diffTimeBetweenStartAndCurrent = currentTime - prevState.startTime; // This is in milliseconds\n\n        if (diffTimeBetweenStartAndCurrent === 0) {\n          diffTimeBetweenStartAndCurrent = 1;\n        }\n        const speedPerOneMillisecond = (loaded - prevState.lastLoaded) / diffTimeBetweenStartAndCurrent;\n        const speedPerSecond = speedPerOneMillisecond * 1000;\n        console.log(\"Speed per second: \", speedPerSecond);\n        return {\n          loaded: loaded,\n          startTime: currentTime,\n          lastLoaded: loaded,\n          total: total,\n          percentage: percentage,\n          speedUpload: speedPerSecond\n        };\n      default:\n        return null;\n    }\n  }\n\n  /*\n  componentWillReceiveProps(nextProps){\n   const {event} = nextProps;\n   console.log('getting an event of uploading', event);\n   switch (_.get(event, 'type')){\n       \n       case 'onUploadProgress':\n           const loaded = _.get(event, 'payload.loaded', 0);\n           const total = _.get(event, 'payload.total', 0);\n           const percentage = total !== 0 ? (loaded/total) * 100 : 0;\n           \n           this.setState({\n               loaded: loaded,\n               total: total,\n           percentage: percentage,\n       });\n       \n       break;\n       \n       default:\n           break;\n   }\n  }\n   */\n  render() {\n    const {\n      percentage,\n      data,\n      total,\n      loaded,\n      speedUpload\n    } = this.state;\n    //const {data} = this.props;\n    const totalFiles = _.get(data, 'files', []).length;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-card app-card-uploading\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app-card-content\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"app-card-content-inner\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"app-home-uploading\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"app-home-uploading-icon\",\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"icon-upload\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"Sending...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"app-upload-files-total\",\n              children: [\"Uploading \", totalFiles, \" files\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"app-progress\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  width: `${percentage}%`\n                },\n                className: \"app-progress-bar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"app-upload-stats\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"app-upload-stats-left\",\n                children: [betterNumber(loaded), \"/\", betterNumber(total)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"app-upload-stats-right\",\n                children: [betterNumber(speedUpload), \"/s\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"app-form-action\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"app-upload-cancel-button app-button\",\n                type: \"button\",\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 21\n    }, this);\n  }\n}\nHomeUploading.propTypes = {\n  data: PropTypes.object,\n  event: PropTypes.object\n};\nexport default HomeUploading;","map":{"version":3,"names":["React","PropTypes","_","betterNumber","jsxDEV","_jsxDEV","HomeUploading","Component","constructor","props","state","startTime","Date","lastLoaded","speedUpload","data","loaded","total","percentage","componentDidMount","setState","getDerivedStateFromProps","nextProps","prevState","event","console","log","get","currentTime","diffTimeBetweenStartAndCurrent","speedPerOneMillisecond","speedPerSecond","render","totalFiles","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","width","type","propTypes","object"],"sources":["/home/arjun/filesharing/app/src/component/home-uploading.js"],"sourcesContent":["import React from \"react\";\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\nimport { betterNumber } from \"../helpers\";\n\nclass HomeUploading extends React.Component{\n\n    constructor(props){\n        super(props);\n\n        this.state = {\n            startTime: new Date(),\n            lastLoaded: 0,\n            speedUpload: 0,\n            data: null,\n            loaded: 0,\n            total: 0,\n            percentage: 10,\n        }\n    }\n    componentDidMount(){\n        const {data} = this.props;\n        this.setState({\n            data: data\n        });\n    }\n    \n    \n    static getDerivedStateFromProps(nextProps, prevState){\n        const {event} = nextProps;\n        console.log(\"Getting the event of uploading\", event);\n        \n        switch (_.get(event, 'type')){\n            \n            case 'onUploadProgress':\n                \n                const loaded = _.get(event, 'payload.loaded', 0);\n                const total = _.get(event, 'payload.total', 0);\n                const percentage = total !== 0 ? (loaded/total) * 100 : 0;\n\n                const currentTime = new Date();\n                \n                let diffTimeBetweenStartAndCurrent = currentTime - prevState.startTime; // This is in milliseconds\n\n                if(diffTimeBetweenStartAndCurrent === 0){\n                    diffTimeBetweenStartAndCurrent = 1;\n                }\n                const speedPerOneMillisecond = ((loaded - prevState.lastLoaded) / diffTimeBetweenStartAndCurrent);\n                const speedPerSecond = speedPerOneMillisecond * 1000;\n\n                console.log(\"Speed per second: \", speedPerSecond)\n                \n                return{\n                    loaded: loaded,\n                    startTime: currentTime,\n                    lastLoaded: loaded,\n                    total: total,\n                    percentage: percentage,\n                    speedUpload: speedPerSecond\n                }\n                \n            default:\n                return null\n        }\n    }\n            \n            \n           /*\n        componentWillReceiveProps(nextProps){\n            const {event} = nextProps;\n            console.log('getting an event of uploading', event);\n            switch (_.get(event, 'type')){\n                \n                case 'onUploadProgress':\n                    const loaded = _.get(event, 'payload.loaded', 0);\n                    const total = _.get(event, 'payload.total', 0);\n                    const percentage = total !== 0 ? (loaded/total) * 100 : 0;\n                    \n                    this.setState({\n                        loaded: loaded,\n                        total: total,\n                    percentage: percentage,\n                });\n                \n                break;\n                \n                default:\n                    break;\n            }\n        }\n            */\n            render(){\n                const {percentage, data, total, loaded, speedUpload} = this.state;\n                //const {data} = this.props;\n                const totalFiles = _.get(data, 'files', []).length;\n                return(\n                    <div className='app-card app-card-uploading'>\n                    <div className='app-card-content'>\n                        <div className='app-card-content-inner'>\n                            <div className=\"app-home-uploading\">\n                                <div className=\"app-home-uploading-icon\">\n                                    <i className=\"icon-upload\" />\n                                    <h2>Sending...</h2>\n                                </div>\n                                <div className=\"app-upload-files-total\">Uploading {totalFiles} files</div>\n\n                                <div className=\"app-progress\">\n                                    <span style={{width: `${percentage}%`}} className=\"app-progress-bar\" />\n                                </div>\n                                <div className=\"app-upload-stats\">\n                                    <div className=\"app-upload-stats-left\">{betterNumber(loaded)}/{betterNumber(total)}</div>\n                                    <div className=\"app-upload-stats-right\">{betterNumber(speedUpload)}/s</div>\n                                </div>\n\n                                <div className=\"app-form-action\">\n                                    <button className=\"app-upload-cancel-button app-button\" type=\"button\">Cancel</button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    </div>\n        )\n    }\n\n}\n\nHomeUploading.propTypes = {\n    data: PropTypes.object,\n    event: PropTypes.object\n}\n\nexport default HomeUploading;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}