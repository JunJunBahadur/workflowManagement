{"ast":null,"code":"import axios from 'axios';\nimport { apiUrl } from '../config';\nimport _ from 'lodash';\nexport const upload = function (form) {\n  let callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : () => {};\n  const url = `${apiUrl}/upload`;\n  let files = _.get(form, 'files', []);\n  let data = new FormData();\n  _.each(files, file => {\n    data.append('files', file);\n  });\n  data.append('to', _.get(form, 'to'));\n  data.append('from', _.get(form, 'from'));\n  data.append('message', _.get(form, 'message'));\n  const config = {\n    onUploadProgress: event => {\n      console.log('event: ', event);\n      return callback({\n        type: 'onUploadProgress',\n        payload: event\n      });\n    }\n  };\n  axios.post(url, data, config).then(response => {\n    //upload successfull.\n    return callback({\n      type: 'success',\n      payload: response.data\n    });\n  }).catch(err => {\n    return callback({\n      type: 'error',\n      payload: err\n    });\n  });\n};","map":{"version":3,"names":["axios","apiUrl","_","upload","form","callback","arguments","length","undefined","url","files","get","data","FormData","each","file","append","config","onUploadProgress","event","console","log","type","payload","post","then","response","catch","err"],"sources":["/home/arjun/filesharing/app/src/helpers/upload.js"],"sourcesContent":["import axios from 'axios';\nimport { apiUrl } from '../config';\nimport _ from 'lodash';\n\nexport const upload = (form, callback = () => {}) => {\n    const url = `${apiUrl}/upload`;\n    let files = _.get(form, 'files', []);\n\n    let data = new FormData();\n    _.each(files, (file) => {\n        data.append('files', file);\n    });\n\n    data.append('to', _.get(form, 'to'));\n    data.append('from', _.get(form, 'from'));\n    data.append('message', _.get(form, 'message'));\n\n    const config = {\n        onUploadProgress: (event) => {\n\n            console.log('event: ',event);\n            return callback({\n                type: 'onUploadProgress',\n                payload: event,\n            })\n        }\n    }\n\n    axios.post(url, data, config).then((response) => {\n\n        //upload successfull.\n        return callback({\n            type: 'success',\n            payload: response.data\n        });\n    }).catch((err) => {\n        return callback({\n            type: 'error',\n            payload: err\n        })\n    });\n};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,QAAQ,WAAW;AAClC,OAAOC,CAAC,MAAM,QAAQ;AAEtB,OAAO,MAAMC,MAAM,GAAG,SAAAA,CAACC,IAAI,EAA0B;EAAA,IAAxBC,QAAQ,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,MAAM,CAAC,CAAC;EAC5C,MAAMG,GAAG,GAAI,GAAER,MAAO,SAAQ;EAC9B,IAAIS,KAAK,GAAGR,CAAC,CAACS,GAAG,CAACP,IAAI,EAAE,OAAO,EAAE,EAAE,CAAC;EAEpC,IAAIQ,IAAI,GAAG,IAAIC,QAAQ,EAAE;EACzBX,CAAC,CAACY,IAAI,CAACJ,KAAK,EAAGK,IAAI,IAAK;IACpBH,IAAI,CAACI,MAAM,CAAC,OAAO,EAAED,IAAI,CAAC;EAC9B,CAAC,CAAC;EAEFH,IAAI,CAACI,MAAM,CAAC,IAAI,EAAEd,CAAC,CAACS,GAAG,CAACP,IAAI,EAAE,IAAI,CAAC,CAAC;EACpCQ,IAAI,CAACI,MAAM,CAAC,MAAM,EAAEd,CAAC,CAACS,GAAG,CAACP,IAAI,EAAE,MAAM,CAAC,CAAC;EACxCQ,IAAI,CAACI,MAAM,CAAC,SAAS,EAAEd,CAAC,CAACS,GAAG,CAACP,IAAI,EAAE,SAAS,CAAC,CAAC;EAE9C,MAAMa,MAAM,GAAG;IACXC,gBAAgB,EAAGC,KAAK,IAAK;MAEzBC,OAAO,CAACC,GAAG,CAAC,SAAS,EAACF,KAAK,CAAC;MAC5B,OAAOd,QAAQ,CAAC;QACZiB,IAAI,EAAE,kBAAkB;QACxBC,OAAO,EAAEJ;MACb,CAAC,CAAC;IACN;EACJ,CAAC;EAEDnB,KAAK,CAACwB,IAAI,CAACf,GAAG,EAAEG,IAAI,EAAEK,MAAM,CAAC,CAACQ,IAAI,CAAEC,QAAQ,IAAK;IAE7C;IACA,OAAOrB,QAAQ,CAAC;MACZiB,IAAI,EAAE,SAAS;MACfC,OAAO,EAAEG,QAAQ,CAACd;IACtB,CAAC,CAAC;EACN,CAAC,CAAC,CAACe,KAAK,CAAEC,GAAG,IAAK;IACd,OAAOvB,QAAQ,CAAC;MACZiB,IAAI,EAAE,OAAO;MACbC,OAAO,EAAEK;IACb,CAAC,CAAC;EACN,CAAC,CAAC;AACN,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}